'''
module for default dictionaries
'''


def defaultPositions():
	# dictionary for defaults for joint placement
	PosDict = {
		'larm': [[3.75, 31.1, -0.4], [9.25, 31, -0.6], [14.25, 31, -0.55]],
		'rarm': [[-3.75, 31.1, -0.4], [-9.25, 31, -0.6], [-14.25, 31, -0.55]],
	}

	return PosDict


def curveShapes():
	'''
	dictionary of curve shapes for controls
	usage : crvDict = controlShapes.curveShapes()
					crvDict.keys()	-	see shapes in dictionary
					e.g.	mc.curve(p=crvDict['square'],d=1)
	'''

	curveDict = {
		'square': ([[-1.0, 0.0, 1.0], [-1.0, 0.0, -1.0], [1.0, 0.0, -1.0], [1.0, 0.0, 1.0], [-1.0, 0.0, 1.0]]),
		'cube': ([[-1.0, 1.0, 1.0], [-1.0, -1.0, 1.0], [1.0, -1.0, 1.0], [1.0, 1.0, 1.0], [-1.0, 1.0, 1.0], [-1.0, 1.0, -1.0], [-1.0, -1.0, -1.0], [-1.0, -1.0, 1.0], [1.0, -1.0, 1.0], [1.0, 1.0, 1.0], [1.0, 1.0, -1.0], [1.0, -1.0, -1.0], [1.0, -1.0, 1.0], [1.0, -1.0, -1.0], [-1.0, -1.0, -1.0], [-1.0, 1.0, -1.0], [1.0, 1.0, -1.0]]),
		'cylinder': ([[0.0, 1.0, -1.0], [0.707, 1.0, -0.707], [1.0, 1.0, 0.0], [0.707, 1.0, 0.707], [0.707, 1.0, 0.707], [0.0, 1.0, 1.0], [-0.707, 1.0, 0.707], [-1.0, 1.0, 0.0], [-0.707, 1.0, -0.707], [0.0, 1.0, -1.0], [0.0, 0.333, -1.0], [0.707, 0.333, -0.707], [1.0, 0.333, 0.0], [0.707, 0.333, 0.707], [0.0, 0.333, 1.0], [-0.707, 0.333, 0.707], [-1.0, 0.333, 0.0], [-0.707, 0.333, -0.707], [0.0, 0.333, -1.0], [0.0, -0.333, -1.0], [0.707, -0.333, -0.707], [1.0, -0.333, 0.0], [0.707, -0.333, 0.707], [0.0, -0.333, 1.0], [-0.707, -0.333, 0.707], [-1.0, -0.333, 0.0], [-0.707, -0.333, -0.707], [0.0, -0.333, -1.0], [0.0, -1.0, -1.0], [0.707, -1.0, -0.707], [1.0, -1.0, 0.0], [0.707, -1.0, 0.707], [0.0, -1.0, 1.0], [-0.707, -1.0, 0.707], [-1.0, -1.0, 0.0], [-0.707, -1.0, -0.707], [0.0, -1.0, -1.0], [0.707, -1.0, -0.707], [0.707, 1.0, -0.707], [1.0, 1.0, 0.0], [1.0, -1.0, 0.0], [0.707, -1.0, 0.707], [0.707, 1.0, 0.707], [0.0, 1.0, 1.0], [0.0, -1.0, 1.0], [-0.707, -1.0, 0.707], [-0.707, 1.0, 0.707], [-1.0, 1.0, 0.0], [-1.0, -1.0, 0.0], [-0.707, -1.0, -0.707], [-0.707, 1.0, -0.707], [0.0, 1.0, -1.0], [0.0, -1.0, -1.0]]),
		'cog': ([[0.5, 0.0, -0.866], [0.712, 0.0, -1.078], [1.078, 0.0, -0.712], [0.866, 0.0, -0.5], [1.0, 0.0, 0.0], [1.29, 0.0, 0.078], [1.156, 0.0, 0.578], [0.866, 0.0, 0.5], [0.5, 0.0, 0.866], [0.578, 0.0, 1.156], [0.078, 0.0, 1.29], [0.0, 0.0, 1.0], [-0.5, 0.0, 0.866], [-0.712, 0.0, 1.078], [-1.078, 0.0, 0.712], [-0.866, 0.0, 0.5], [-1.0, 0.0, 0.0], [-1.29, 0.0, -0.078], [-1.156, 0.0, -0.578], [-0.866, 0.0, -0.5], [-0.5, 0.0, -0.866], [-0.578, 0.0, -1.156], [-0.078, 0.0, -1.29], [0.0, 0.0, -1.0], [0.5, 0.0, -0.866]]),
		'arrow': ([[0.0, 0.0, -1.0], [-2.0, 0.0, -1.0], [-2.0, 0.0, -2.0], [-4.0, 0.0, 0.0], [-2.0, 0.0, 2.0], [-2.0, 0.0, 1.0], [0.0, 0.0, 1.0], [0.0, 0.0, -1.0]]),
		'doubleArrow': ([[0.0, 0.0, -1.0], [-2.0, 0.0, -1.0], [-2.0, 0.0, -2.0], [-4.0, 0.0, 0.0], [-2.0, 0.0, 2.0], [-2.0, 0.0, 1.0], [0.0, 0.0, 1.0], [2.0, 0.0, 1.0], [2.0, 0.0, 2.0], [4.0, 0.0, 0.0], [2.0, 0.0, -2.0], [2.0, 0.0, -1.0], [0.0, 0.0, -1.0]]),
		'quadArrow': ([[-1.0, 0.0, -1.0], [-1.0, 0.0, -3.0], [-2.0, 0.0, -3.0], [0.0, 0.0, -5.0], [2.0, 0.0, -3.0], [1.0, 0.0, -3.0], [1.0, 0.0, -1.0], [3.0, 0.0, -1.0], [3.0, 0.0, -2.0], [5.0, 0.0, 0.0], [3.0, 0.0, 2.0], [3.0, 0.0, 1.0], [1.0, 0.0, 1.0], [1.0, 0.0, 3.0], [2.0, 0.0, 3.0], [0.0, 0.0, 5.0], [-2.0, 0.0, 3.0], [-1.0, 0.0, 3.0], [-1.0, 0.0, 1.0], [-3.0, 0.0, 1.0], [-3.0, 0.0, 2.0], [-5.0, 0.0, 0.0], [-3.0, 0.0, -2.0], [-3.0, 0.0, -1.0], [-1.0, 0.0, -1.0]]),
		'circle': ([[0.0, 0.0, -1.0], [-0.309, 0.0, -0.951], [-0.588, 0.0, -0.809], [-0.809, 0.0, -0.588], [-0.951, 0.0, -0.309], [-1.0, 0.0, 0.0], [-0.951, 0.0, 0.309], [-0.809, 0.0, 0.588], [-0.588, 0.0, 0.809], [-0.309, 0.0, 0.951], [-0.0, 0.0, 1.0], [0.309, 0.0, 0.951], [0.588, 0.0, 0.809], [0.809, 0.0, 0.588], [0.951, 0.0, 0.309], [1.0, 0.0, 0.0], [0.951, 0.0, -0.309], [0.809, 0.0, -0.588], [0.588, 0.0, -0.809], [0.309, 0.0, -0.951], [0.0, 0.0, -1.0]]),
		'sphere': ([[0.0, 0.0, -1.0], [-0.5, 0.0, -0.866], [-0.866, 0.0, -0.5], [-1.0, 0.0, 0.0], [-0.866, 0.0, 0.5], [-0.5, 0.0, 0.866], [0.0, 0.0, 1.0], [0.5, 0.0, 0.866], [0.866, 0.0, 0.5], [1.0, 0.0, 0.0], [0.866, 0.0, -0.5], [0.5, 0.0, -0.866], [0.0, 0.0, -1.0], [0.0, 0.5, -0.866], [0.0, 0.866, -0.5], [0.0, 1.0, 0.0], [0.0, 0.866, 0.5], [0.0, 0.5, 0.866], [0.0, 0.0, 1.0], [0.0, -0.5, 0.866], [0.0, -0.866, 0.5], [0.0, -1.0, 0.0], [0.0, -0.866, -0.5], [0.0, -0.5, -0.866], [0.0, 0.0, -1.0], [-0.5, 0.0, -0.866], [-0.866, 0.0, -0.5], [-1.0, 0.0, 0.0], [-0.866, 0.5, 0.0], [-0.5, 0.866, 0.0], [0.0, 1.0, 0.0], [0.5, 0.866, 0.0], [0.866, 0.5, 0.0], [1.0, 0.0, 0.0], [0.866, -0.5, 0.0], [0.5, -0.866, 0.0], [0.0, -1.0, 0.0], [-0.5, -0.866, 0.0], [-0.866, -0.5, 0.0], [-1.0, 0.0, 0.0]]),
		'thinArrow': ([[0.0, 0.0, 0.0], [0.0, 0.0, 3.0], [-0.454, 0.0, 3.0], [0.0, 0.0, 5.0], [0.454, 0.0, 3.0], [0.0, 0.0, 3.0], [0.0, 0.454, 3.0], [0.0, 0.0, 5.0], [0.0, -0.454, 3.0], [0.0, 0.0, 3.0]]),
		'pin': ([[0.0, 0.0, 0.0], [0.0, 0.0, -2.0], [0.0, 0.25, -2.067], [0.0, 0.433, -2.25], [0.0, 0.5, -2.5], [0.354, 0.354, -2.5], [0.5, -0.0, -2.5], [0.354, -0.354, -2.5], [0.0, -0.5, -2.5], [-0.354, -0.354, -2.5], [-0.5, -0.0, -2.5], [-0.354, 0.354, -2.5], [0.0, 0.5, -2.5], [0.0, 0.433, -2.75], [0.0, 0.25, -2.933], [0.0, -0.0, -3.0], [0.0, -0.25, -2.933], [0.0, -0.433, -2.75], [0.0, -0.5, -2.5], [0.0, -0.433, -2.25], [0.0, -0.25, -2.067], [0.0, 0.0, -2.0], [0.25, -0.0, -2.067], [0.433, -0.0, -2.25], [0.5, -0.0, -2.5], [0.433, -0.0, -2.75], [0.25, -0.0, -2.933], [0.0, -0.0, -3.0], [-0.25, -0.0, -2.933], [-0.433, -0.0, -2.75], [-0.5, -0.0, -2.5], [-0.433, -0.0, -2.25], [-0.25, -0.0, -2.067], [0.0, 0.0, -2.0]]),
	}

	return curveDict


def colorDictionary():
	# color dictionary
	colorDict = {'default': 0,
				 'white': 16,
				 'w': 16,
				 'pink': 9,
				 'p': 9,
				 # main colors
				 'red': 13,
				 'r': 13,
				 'blue': 6,
				 'b': 6,
				 'green': 14,
				 'g': 14,
				 'yellow': 17,
				 'y': 17,
				 # secondary colors
				 'secred': 20,
				 'sr': 20,
				 'secblue': 18,
				 'sb': 18,
				 'secgreen': 19,
				 'sg': 19,
				 'secyellow': 22,
				 'sy': 22,
				 # template colors
				 'tmplred': 31,
				 'tr': 31,
				 'tmplblue': 29,
				 'tb': 29,
				 'tmplgreen': 23,
				 'tg': 23,
				 'tmplyellow': 25,
				 'ty': 25,
				 # joint colors
				 'bnd': 28,
				 'env': 16,
				 }

	return colorDict


def displayDictionary():
	# display type dictionary
	displayDict = {'normal': 0,
				   'n': 0,
				   'template': 1,
				   't': 1,
				   'reference': 2,
				   'r': 2
				   }

	return displayDict


def moduleDictionary():
	# current modules dictionary
	moduleDict = {'arm': '',
				  'leg': '',
				  'spine': '',
				  }

	return moduleDict
